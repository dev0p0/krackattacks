0:00:00.000,0:00:02.590
本视频基于 
「密钥重装攻击（Key Reinstallation Attacks）」

0:00:02.590,0:00:04.505
将演示我们在 WPA2 中发现的漏洞

0:00:04.505,0:00:07.435
利用在 WPA2 连接中强制重用随机数

0:00:07.440,0:00:10.400
可以用来攻击 Android 和 Linux 设备

0:00:10.540,0:00:13.980
首先，将 Android 设备连接到我们的测试 Wi-Fi “testnetwork”

0:00:14.020,0:00:16.080
此时并没有攻击

0:00:16.260,0:00:19.020
请注意，该网络正在使用 WPA2 加密

0:00:19.020,0:00:21.300
所以会有一个“锁”符号

0:00:21.480,0:00:24.220
接下来访问一个示例网站：match.com

0:00:24.220,0:00:27.620
Android 可以使用 HTTPS 这一额外的加密层

0:00:27.780,0:00:30.340
绿色的“小锁”意味着正在使用 HTTPS

0:00:30.340,0:00:33.780
并且查看页面信息时也会特别提示

0:00:33.780,0:00:40.600
换言之，所有传输的数据通过 WPA2 和 HTTPS 进行了双重加密保护

0:00:41.320,0:00:45.140
现在开始攻击，
这个工具可以被用来攻击 Android 和 Linux 设备

0:00:45.660,0:00:49.300
第一步，用以下命令开启 WPA2 攻击脚本

0:00:49.380,0:00:52.960
请注意，这是一个受保护的网络

0:00:53.160,0:00:55.680
针对其中的一个特定设备发起攻击

0:00:56.020,0:00:59.760
该工具启动后将搜索要被攻击的网络

0:00:59.960,0:01:02.560
然后会在不同信道对网络进行克隆

0:01:02.560,0:01:07.420
这种恶意的克隆可以使攻击者更可靠地操纵握手信息

0:01:07.420,0:01:10.460
这个有用的弱点由我们发现

0:01:11.000,0:01:15.460
第二步，确保受害者可以通过恶意网络访问互联网

0:01:15.760,0:01:19.100
然后，运行 “sslstrip” 工具进行接下来的操作

0:01:19.100,0:01:24.040
该工具将尝试对未正确配置的网站移除 HTTPS 保护

0:01:24.780,0:01:29.420
最后，我使用 “wireshark” 截获受害者客户端发送的任何数据

0:01:33.740,0:01:35.860
现在你已经做好了攻击准备

0:01:36.000,0:01:40.300
我们用智能手机连接到 WPA2 保护的 "testnetwork" 试试看

0:01:40.700,0:01:42.295
一旦受害者开启 Wi-Fi

0:01:42.295,0:01:44.535
Android 将会搜索到 “testnetwork”

0:01:45.960,0:01:51.600
搜索到后将会尝试连接到真正的 “testnetwork”，这样就会失败

0:01:51.900,0:01:58.020
好在可以通过发送特殊的 Wi-Fi 帧使 Android 切换到不同的信道

0:01:58.260,0:02:01.920
这样就可以欺骗 Android 与克隆的恶意网络建立连接

0:02:02.460,0:02:07.500
此时此刻，我们正处于受害者和真正网络中间的位置

0:02:07.620,0:02:10.500
这使我们能够可靠地操纵信息

0:02:10.500,0:02:13.900
以便对 4 次握手进行“密钥重装攻击”

0:02:13.980,0:02:16.380
通常情况下，执行这样的攻击后

0:02:16.380,0:02:19.540
受害者会重新使用随机数加密数据帧

0:02:19.540,0:02:22.420
这使我们能够解密任何被加密的数据

0:02:22.500,0:02:24.780
由于存在漏洞

0:02:24.780,0:02:28.105
Android 和 Linux 不会重新安装正确的密钥

0:02:28.105,0:02:31.535
相反，他们会安装一个全零加密的密钥

0:02:31.580,0:02:36.800
这使得我们更容易截获和修改该设备传输的所有数据

0:02:37.760,0:02:42.940
当我们打开 “Wireshark”，可以看到截获的大量数据

0:02:43.200,0:02:49.020
请注意，通常攻击者无法明文读取被 WPA2 加密的数据

0:02:49.240,0:02:52.820
但是，我们可以在不知道 Wi-Fi 密码的前提下

0:02:52.820,0:02:55.440
明文读取受害者发送的所有数据包

0:02:55.460,0:02:59.740
这意味着，我们已经成功地绕过了 WPA2 保护机制

0:03:00.620,0:03:04.000
现在，来看看受害者用 Android 访问一个网站

0:03:04.065,0:03:06.855
还是刚才的那个网站 match.com

0:03:10.520,0:03:15.360
你现在可以看到，浏览器地址栏上面已经没有了绿色的 HTTPS “锁”

0:03:15.420,0:03:20.000
这意味着网站没有使用 HTTPS 作为额外的保护

0:03:20.460,0:03:24.260
请注意，你需要用 “sslstrip” 工具绕过 HTTPS

0:03:24.260,0:03:29.540
虽然，绕过 HTTPS 在绝大数正确配置的网站都不起作用

0:03:29.545,0:03:32.020
但绕过 HTTPS 起到了重要作用

0:03:32.500,0:03:37.120
很多人通常不会察觉已经不再使用 HTTPS 了

0:03:37.120,0:03:41.180
因此受害者会继续输入真正的电子邮箱和密码并登录

0:03:45.100,0:03:49.720
现在攻击者可以截获电子邮箱地址和密码了

0:03:49.720,0:03:52.200
这只是用来演示的假帐户

0:03:52.200,0:03:54.040
所以登录失败

0:03:54.320,0:03:58.100
然而攻击者也能看到输入的演示帐户密码

0:03:58.100,0:04:01.040
现在去看看攻击者收集到的登录尝试

0:04:07.220,0:04:12.620
我们可以看到，攻击者截获了受害者的用户名和密码

0:04:13.600,0:04:19.400
为了避免您成为 WPA2 攻击的受害者，
请您务必更新所有 Wi-Fi 设备

