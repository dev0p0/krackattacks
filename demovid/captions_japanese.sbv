0:00:00.000,0:00:04.660
このビデオは論文
「鍵の再インストール攻撃: ノンス再利用の強制」に
準拠しています。

0:00:04.700,0:00:10.560
このデモ上の私たちが発見したWPA2の弱点は、
LinuxとAndroid端末を攻撃することができます。

0:00:10.560,0:00:15.740
まず、Android 端末を使用して
私たちの Wi-Fi テストネットワークに接続します。

0:00:15.740,0:00:20.720
このネットワークが鍵のシンボルに示されるようにWPA2暗号化を使用していることに注目してください。

0:00:20.740,0:00:24.280
次に、例えば、match.comを訪問します。

0:00:24.320,0:00:33.580
Android は、
追加の保護レイヤーとしてHTTPSを使用します。
これは緑のHTTPSロックで示され、Webページの情報を表示すると確認することができます。

0:00:33.780,0:00:40.600
言い換えると、すべての送信された情報は確実にWPA2とHTTPSの両方を使用して保護されています。

0:00:41.320,0:00:45.140
さて、Android 端末と Linux を攻撃するためのツールを起動してみましょう。

0:00:45.660,0:00:49.300
まず、このコマンドは、WPA2攻撃スクリプトを
開始するために使用されます。

0:00:49.380,0:00:55.720
このコマンドには攻撃対象となる
「保護されたWi-Fiネットワーク名」が含まれること、
また特定のデバイスのみを対象としていることに
注目してください。

0:00:56.020,0:01:02.220
このツールは、攻撃を受ける
「保護されたWi-Fiネットワーク」を
探すことから始め、このネットワークを
別のチャネルでクローンします。

0:01:02.560,0:01:10.780
この不正なクローンネットワークは、攻撃者が、
私たちが発見した弱点を悪用するのに必要な
「ハンドシェイクメッセージを確実に操作すること」を
可能にします。

0:01:11.000,0:01:15.460
次に、犠牲者がこの不正なネットワークを通して
インターネットにアクセスできること確認します。

0:01:15.760,0:01:24.400
さらに、いくつかのステップで
「sslstrip」ツールを実行します。
このツールは、不適切に設定されたWebサイトの
「追加のHTTPS保護」の削除を試みます。

0:01:24.780,0:01:29.840
最後に、「Wireshark」を使用して、このクライアントが送信するすべてのデータを取得します。

0:01:33.740,0:01:35.860
これで、攻撃を実施する準備ができました。

0:01:36.000,0:01:40.300
それでは、スマートフォンに移って、
WPA2 で保護されたテストネットワークに
接続してみましょう。

0:01:40.700,0:01:45.140
犠牲者が Wi-Fi を有効にすると、
Android はテストネットワークを探します。

0:01:45.600,0:01:51.600
そのネットワークを発見すると、
実際のテストネットワークに接続しようとします。
これは私たち(攻撃者)が望んでいないことです。

0:01:51.900,0:01:58.020
幸いなことに私たちは、この Android を
別のチャンネルに切り替えるように指示する
「特別な Wi-Fi フレーム」を送信することで、
これを解決できます。

0:01:58.260,0:02:01.920
これは不正なクローンネットワークに接続するように Android を騙します。

0:02:02.460,0:02:07.500
実質、私たちは犠牲者と本当の Wi-Fi ネットワーク の間の「Man in The Middle(中間者)」ポジションにいる、
ということです。

0:02:07.620,0:02:13.940
このことは私たちに
確実なメッセージの操作をもたらし、
4ウェイハンドシェイクに対する
「キー再インストール攻撃」を実行可能にします。

0:02:13.980,0:02:22.200
通常であれば、この攻撃のあとは、
犠牲者はデータフレームを暗号化するときに
ノンスを再利用することになり、
攻撃者に暗号化されたデータを復元することを
許します。

0:02:22.500,0:02:31.580
しかし、実装のバグによって、Android と Linux は実際の秘密鍵を再インストールしません。かわりに、「すべてがゼロの暗号化キー」を再インストールするのです。

0:02:31.580,0:02:37.080
これは、これらのデバイスによって送信される
すべてのデータを傍受・操作することを
さらに簡単にします。

0:02:37.760,0:02:42.940
さて、「Wireshark」を見ると、すでにかなりの量の
データが傍受されていることがわかります。

0:02:43.200,0:02:49.020
ここでは、通常ならばこれらのデータは
すべてWPA2を使用して暗号化されているため、
攻撃者が読み取ることはできないということに
留意してください。

0:02:49.240,0:02:55.200
しかし、この保護された Wi-Fi ネットワークのパスワードを知らなくても、犠牲者が送信しているすべての
パケットを読み取ることができるのです。

0:02:55.460,0:02:59.740
これは私たちが WPA2 のバイパスに成功したことを
明確に示しています。

0:03:00.620,0:03:04.000
今度は犠牲者の Android 端末で
ウェブサイトにアクセスしてみましょう。

0:03:04.060,0:03:07.000
ここでは、 match.com を再訪します。

0:03:10.520,0:03:15.360
あなたが今見ているように、
ブラウザのアドレスバーにはもはや
緑のHTTPSロックはありません。

0:03:15.420,0:03:20.000
これは、このウェブサイトがもはや
追加の保護レイヤーとしてHTTPSを使用しない
ことを意味します。

0:03:20.460,0:03:24.260
ここでは、「sslstrip」ツールを使用してHTTPSのバイパスを可能にしている点に留意してください。

0:03:24.260,0:03:32.200
このHTTPSをバイパスする問題は、適切に構成されたウェブサイトに対しては有効ではないのですが、有効に発動させることができるところは数多くあります。

0:03:32.500,0:03:37.120
残念ながら、多くのユーザーは
HTTPSが使われなくなったことに気が付きません。

0:03:37.120,0:03:41.660
したがって、彼らは本当の
メールアドレスとパスワードを使って
ログインを行います。

0:03:45.100,0:03:49.720
攻撃者はここで、
犠牲者のメールアドレスとパスワードを
傍受することができます。

0:03:49.720,0:03:53.880
もちろんこれはデモなので、
ログイン失敗が意味する通り、
フェイクのアカウントを使っています。

0:03:54.320,0:03:58.100
とはいえ、攻撃者は犠牲者が
使用しようとするパスワードを知ることができます。

0:03:58.100,0:04:01.040
それでは、攻撃者になって、
ログインを試してみましょう。

0:04:07.220,0:04:12.760
攻撃者が、犠牲者が使用したユーザー名とパスワードを
実際に傍受できたことがわかります。

0:04:13.600,0:04:19.400
このWPA2に対する攻撃の犠牲者にならないためには、
あなたの全てのWi-Fi機器をアップデートする
必要があります。

