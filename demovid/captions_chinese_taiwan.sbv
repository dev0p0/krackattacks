0:00:00.000,0:00:02.590
影片根據 「金鑰重灌攻擊（Key Reinstallation Attacks）」

0:00:02.590,0:00:04.505
將演示我們在 WPA2 中發現的漏洞

0:00:04.505,0:00:07.435
利用在 WPA2 連線中強制重用亂數

0:00:07.440,0:00:10.400
可以用來攻擊 Android 和 Linux 裝置

0:00:10.540,0:00:13.980
首先，將 Android 裝置連線到我們的實驗 Wi-Fi 「testnetwork」

0:00:14.020,0:00:16.080
此時並沒有攻擊

0:00:16.260,0:00:19.020
請注意，該存取點正在使用 WPA2 加密

0:00:19.020,0:00:21.300
所以會有一個「鎖」

0:00:21.480,0:00:24.220
接下來存取一個範例網頁：match.com

0:00:24.220,0:00:27.620
Android 可以使用 HTTPS 這一額外的加密層

0:00:27.780,0:00:30.340
綠色的「小鎖」意味著正在使用 HTTPS

0:00:30.340,0:00:33.780
並且查看頁面資訊時也會特別提示

0:00:33.780,0:00:40.600
換言之，所有連線的資料透過 WPA2 和 HTTPS 進行了雙重加密保護

0:00:41.320,0:00:45.140
現在開始攻擊，
這個工具可以被用來攻擊 Android 和 Linux 裝置

0:00:45.660,0:00:49.300
第一步，用以下指令碼開啟 WPA2 攻擊程式

0:00:49.380,0:00:52.960
請注意，這是一個受保護的存取點

0:00:53.160,0:00:55.680
針對其中的一個特定裝置發起攻擊

0:00:56.020,0:00:59.760
工具啟動後將搜索要被攻擊的存取點

0:00:59.960,0:01:02.560
然後會在不同頻道對存取點進行複製

0:01:02.560,0:01:07.420
這種惡意的複製可以使攻擊者更可靠地操縱握手通訊

0:01:07.420,0:01:10.460
這個有用的弱點由我們發現

0:01:11.000,0:01:15.460
第二步，確保受害者可以通過惡意存取點存取互聯網

0:01:15.760,0:01:19.100
然後，執行 「sslstrip」 工具進行接下來的操作

0:01:19.100,0:01:24.040
該工具將嘗試對未正確配置的網頁移除 HTTPS 保護

0:01:24.780,0:01:29.420
最後，我使用 「wireshark」 截獲受害者用戶端傳送的任何資料

0:01:33.740,0:01:35.860
現在你已經做好了攻擊準備

0:01:36.000,0:01:40.300
我們用智慧手機接入到 WPA2 保護的 "testnetwork" 試試看

0:01:40.700,0:01:42.295
一旦受害者開啟 Wi-Fi

0:01:42.295,0:01:44.535
Android 將會搜索到 「testnetwork」

0:01:45.960,0:01:51.600
搜索到後將會嘗試接入到真正的 「testnetwork」，這樣就會失敗

0:01:51.900,0:01:58.020
好在可以通過傳送特殊的 Wi-Fi 幀使 Android 切換到不同的頻道

0:01:58.260,0:02:01.920
這樣就可以讓 Android 與複製的惡意存取點建立連線

0:02:02.460,0:02:07.500
此時此刻，我們正處於受害者和真正存取點之間的位置

0:02:07.620,0:02:10.500
這使我們能夠可靠地操縱通訊

0:02:10.500,0:02:13.900
以便對 4 次握手進行「金鑰重灌攻擊」

0:02:13.980,0:02:16.380
通常情況下，執行這樣的攻擊後

0:02:16.380,0:02:19.540
受害者會重新使用亂數加密資料幀

0:02:19.540,0:02:22.420
這使我們能夠解密任何被加密的資料

0:02:22.500,0:02:24.780
由於存在漏洞

0:02:24.780,0:02:28.105
Android 和 Linux 不會重新安裝正確的金鑰

0:02:28.105,0:02:31.535
相反，他們會安裝一個全零加密的金鑰

0:02:31.580,0:02:36.800
這使得我們可以截獲和修改該裝置連線的所有資料

0:02:37.760,0:02:42.940
當我們打開 「Wireshark」，可以看到截獲的大量資料

0:02:43.200,0:02:49.020
請注意，通常攻擊者無法明文讀取被 WPA2 加密的資料

0:02:49.240,0:02:52.820
但是，我們可以在不知道 Wi-Fi 密碼的前提下

0:02:52.820,0:02:55.440
明文讀取受害者傳送的所有資料包

0:02:55.460,0:02:59.740
這意味著，我們已經成功地繞過了 WPA2 保護機制

0:03:00.620,0:03:04.000
現在，來看看受害者用 Android 存取一個網頁

0:03:04.065,0:03:06.855
還是剛才的網頁 match.com

0:03:10.520,0:03:15.360
你現在可以看到，流覽器位址欄上面已經沒有了綠色的 HTTPS 「鎖」

0:03:15.420,0:03:20.000
這意味著網頁沒有使用 HTTPS 作為額外的保護

0:03:20.460,0:03:24.260
請注意，你需要用 「sslstrip」 工具繞過 HTTPS

0:03:24.260,0:03:29.540
雖然，繞過 HTTPS 在絕大數正確配置的網頁都不起作用

0:03:29.545,0:03:32.020
但繞過 HTTPS 起到了重要意義

0:03:32.500,0:03:37.120
很多人通常不會察覺已經不再使用 HTTPS

0:03:37.120,0:03:41.180
因此受害者會繼續輸入真正的電子信箱和密碼並登入

0:03:45.100,0:03:49.720
現在攻擊者可以截獲電子信箱位址和密碼了

0:03:49.720,0:03:52.200
這只是用來演示的假帳號

0:03:52.200,0:03:54.040
所以登入失敗

0:03:54.320,0:03:58.100
然而攻擊者也能看到輸入的演示帳號密碼

0:03:58.100,0:04:01.040
現在去看看攻擊者收集到的登入嘗試

0:04:07.220,0:04:12.620
我們可以看到，攻擊者截獲了受害者的帳號和密碼

0:04:13.600,0:04:19.400
為了避免您成為 WPA2 攻擊的受害者，
請務必更新所有 Wi-Fi 裝置

