0:00:00.000,0:00:02.590
Это видео сделано на основе доклада Key Reinstallation Attacks:

0:00:02.590,0:00:04.505
Forcing Nonce Reuse in WPA2

0:00:04.505,0:00:07.435
и показывает, как найденные нами в протоколе WPA2 уязвимости

0:00:07.440,0:00:10.400
могут быть использованы для атаки на устройства под Android и Linux

0:00:10.540,0:00:13.980
Сначала, я подключусь к тестовой Wi-Fi-сети с устройства под управлением Android,

0:00:14.020,0:00:16.080
которая еще не была взломана.

0:00:16.260,0:00:19.020
Заметьте, эта сеть использует шифрование WPA2

0:00:19.020,0:00:21.300
о чем говорит маленькая иконка замка.

0:00:21.480,0:00:24.220
Кроме того, при выходе в интернет, например, на сайт знакомств match.com

0:00:24.220,0:00:27.620
Android использует протокол HTTPS как дополнительный уровень защиты.

0:00:27.780,0:00:30.340
Об этом говорит зеленая иконка с замком.

0:00:30.340,0:00:33.780
А также явно написано, если посмотреть свойства страницы.

0:00:33.780,0:00:40.600
Короче, вся передаваемая информация надежно защищена как при помощи WPA2, так и HTTPS.

0:00:41.320,0:00:45.140
Теперь давайте запустим средства для взлома наших устройств под Android и Linux.

0:00:45.660,0:00:49.300
Сначала, данная команда запускает скрипт атаки на WPA2

0:00:49.380,0:00:52.960
Обратите внимание на параметр --target, который указывает ту сеть, которую мы хотим взломать

0:00:53.160,0:00:55.680
поскольку в целях демонстрации я нацеливаюсь только на определенное устройство.

0:00:56.020,0:00:59.760
Скрипт сначала запускает поиск указанной сети,

0:01:00.340,0:01:02.560
затем ретранслирует ее на другом канале.

0:01:02.560,0:01:07.420
Эта вторая копия сети позволяет хакеру надежно подделать пакеты инициализации соединения (handshake)

0:01:07.420,0:01:10.460
что необходимо для найденного нами способа взлома.

0:01:11.000,0:01:15.460
Далее, убедитесь, что жертва все еще может войти в интернет через нашу поддельную сеть.

0:01:15.760,0:01:19.100
Кроме этого, я запускаю sslstrip-утилиту,

0:01:19.100,0:01:24.040
которая пытается снять дополнительную HTTPS-защиту на многих неправильно сконфигурированных сайтах.

0:01:24.780,0:01:29.420
Наконец, я использую программу WireShark для перехвата любой информации, передаваемой жертвой.

0:01:33.740,0:01:35.860
Мы готовы начинать атаку.

0:01:36.000,0:01:40.300
Берем наш смартфон, и снова подключаемся к той же тестовой Wi-Fi сети с защитой по WPA2.

0:01:40.700,0:01:42.295
Как только жертва включила Wi-Fi

0:01:42.295,0:01:44.535
Android начинает искать сеть.

0:01:45.960,0:01:51.600
Как только он ее найдет, он попытается подключиться к настоящей сети, - что нас не устраивает.

0:01:51.900,0:01:58.020
К счастью, существуют специальные Wi-Fi коды, которые подают ему команду перейти на другой канал.

0:01:58.260,0:02:01.920
Так Android найдет и подключится к нашей поддельной сети.

0:02:02.460,0:02:07.500
Таким образом, мы провели 'атаку посредника' (MitM), и находимся между жертвой и реальной Wi-Fi сетью.

0:02:07.620,0:02:10.500
Это позволяет нам надежно контролировать сообщения

0:02:10.500,0:02:13.900
и совершить атаку 'реинсталляции ключа' (KRACK) на четверном квитировании (4-way handshake).

0:02:13.980,0:02:16.380
Обычно, после этой атаки

0:02:16.380,0:02:19.540
ОС жертвы будет повторно использовать один и тот же одноразовый nonce-код при шифровании пакетов данных,

0:02:19.540,0:02:22.420
что позволяет ей не потерять уже полученные данные.

0:02:22.500,0:02:24.780
Однако, из-за бага в реализации протокола

0:02:24.780,0:02:28.105
Android и Linux возьмут не реальный ключ шифрования,

0:02:28.105,0:02:31.535
а заменят его нулями!

0:02:31.580,0:02:34.215
Благодаря этому перехватить или

0:02:34.220,0:02:36.820
подменить все передаваемые этими устройствами данные становится очень легко.

0:02:37.760,0:02:42.940
Мы видим через WireShark, сколько полезной информации на данный момент уже перехвачено.

0:02:43.200,0:02:49.020
В норме, естественно, вся эта информация зашифрована WPA2 и прочесть ее невозможно.

0:02:49.240,0:02:52.820
Но при помощи данных средств, я могу читать все данные жертвы

0:02:52.820,0:02:55.440
абсолютно не зная пароля от его Wi-Fi.

0:02:55.460,0:02:59.740
Это наглядно демонстрирует, что мы обошли защиту WPA2.

0:03:00.620,0:03:04.000
Давайте теперь зайдем в интернет с устройства жертвы.

0:03:04.065,0:03:06.855
Например, опять зайдем на сайт знакомств match.com

0:03:10.520,0:03:15.360
Как видите, в адресной строке браузера теперь нет зеленого замка.

0:03:15.420,0:03:20.000
Это значит, что данный сайт больше не использует протокол HTTPS в качестве дополнительной защиты.

0:03:20.460,0:03:24.260
Обратите внимание, что обойти HTTPS можно при помощи sslstrip.

0:03:24.260,0:03:29.540
Хотя при правильной настройке сервера она не поможет.

0:03:29.545,0:03:32.020
Но на большинстве сайтов работает.

0:03:32.500,0:03:37.120
К сожалению, многие пользователи никогда не смотрят на значок замка

0:03:37.120,0:03:41.180
и сразу введут свой логин и пароль.

0:03:45.100,0:03:49.720
Хакер теперь спокойно может перехватывать учетные данные жертв.

0:03:49.720,0:03:52.200
Естественно, я показываю это на фейковом аккаунте,

0:03:52.200,0:03:54.040
поэтому войти не получается.

0:03:54.320,0:03:58.100
Тем не менее, хакеру видны все ваши введенные пароли.

0:03:58.100,0:04:01.040
Перейдем в WireShark и поищем следы входа на сайт.

0:04:07.220,0:04:12.620
Мы видим перехваченные логин и пароль нашей 'жертвы'.

0:04:13.600,0:04:19.400
Чтобы защитить свой Wi-Fi от этой атаки, вам нужно пропатчить все свои беспроводные устройства.

