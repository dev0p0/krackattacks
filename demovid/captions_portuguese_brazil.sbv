0:00:00.000,0:00:02.590
Este vídeo é baseado nos ataques reinstalação chave:

0:00:02.590,0:00:04.505
Forçando Nonce Reutilização em WPA2

0:00:04.505,0:00:07.435
na demonstração de como fraqueza descobrimos em WPA2

0:00:07.440,0:00:10.400
pode ser usado para atacar Android e Linux dispositivos

0:00:10.540,0:00:13.980
Primeiro, vou usar um dispositivo Android para se conectar ao nosso testnetwork Wi-Fi

0:00:14.020,0:00:16.080
que agora vai ser a rede na presente

0:00:16.260,0:00:19.020
Observe que a rede usa criptografia WPA2

0:00:19.020,0:00:21.300
como indicado por meio do símbolo de bloqueio

0:00:21.480,0:00:24.220
Além disso, na visita, por exemplo, match.com,

0:00:24.220,0:00:27.620
Android usaria HTTPS como uma camada extra de proteção

0:00:27.780,0:00:30.340
Isto é indicado pelo bloqueio HTTPS verde

0:00:30.340,0:00:33.780
e também especialmente mencionados ao visualizar a informação página web

0:00:33.780,0:00:40.600
Em outras palavras, toda a informação transmitida está bem protegida usando WPA2 e HTTPS

0:00:41.320,0:00:45.140
Vamos agora iniciar as ferramentas que serão usadas para atacar Android e Linux dispositivo

0:00:45.660,0:00:49.300
Primeiro, o seguinte comando é usado para iniciar um script ataque WPA2

0:00:49.380,0:00:52.960
Observe que eu incluem a rede Wi-Fi protegida que será atacado

0:00:53.160,0:00:55.680
em que só terá como alvo um dispositivo específico.

0:00:56.020,0:00:59.760
As ferramentas começa a procurar a rede Wi-Fi protegida vamos atacar

0:01:00.340,0:01:02.560
E então vamos clonar esta rede em um canal diferente

0:01:02.560,0:01:07.420
Este clone malicioso da rede permite que o invasor para manipular de forma confiável mensagens handshake

0:01:07.420,0:01:10.460
que é necessário para abusar da fraqueza descobrimos.

0:01:11.000,0:01:15.460
Em segundo lugar, você se certificar de que a vítima pode acessar a internet à nossa rede malicioso

0:01:15.760,0:01:19.100
Além disso, um mais passo de executar a ferramenta sslstrip

0:01:19.100,0:01:24.040
Esta ferramenta irá tentar remover a proteção de HTTPS adicional de sites indevidamente configurados

0:01:24.780,0:01:29.420
Finalmente, eu vou usar o Wireshark para capturar todos os dados que o cliente estará transmitindo

0:01:33.740,0:01:35.860
Agora você está pronto para levar a cabo o ataque

0:01:36.000,0:01:40.300
Então vamos para o smartphone e, em seguida, conectar-se à rede de teste protegido por WPA2

0:01:40.700,0:01:42.295
Uma vez que a vítima permitiu que o Wi-Fi

0:01:42.295,0:01:44.535
Android irá procurar a rede de teste

0:01:45.960,0:01:51.600
Uma vez que ele descobrir que a rede, ele vai tentar se conectar à rede teste real, que não é o que queremos

0:01:51.900,0:01:58.020
Felizmente, podemos resolver isso enviando quadros Wi-Fi especiais que comandam o Android em mudar para um canal diferente

0:01:58.260,0:02:01.920
Isso engana Android em conexão com o malicioso clonado da rede

0:02:02.460,0:02:07.500
Essencialmente, nós temos agora um homem na posição intermediária entre a vítima e a rede Wi-Fi reais

0:02:07.620,0:02:10.500
Isso nos permite manipular de forma confiável as mensagens

0:02:10.500,0:02:13.900
e realizar o ataque chave reinstalação contra o 4-handshake

0:02:13.980,0:02:16.380
Normalmente, após a execução de um tal ataque

0:02:16.380,0:02:19.540
a vítima vai reutilizar nonces ao criptografar quadros de dados

0:02:19.540,0:02:22.420
e isso nos permite recuperar todos os dados criptografados

0:02:22.500,0:02:24.780
No entanto, devido ao bug implementação

0:02:24.780,0:02:28.105
Android e Linux não irá reinstalar a chave secreta real

0:02:28.105,0:02:31.535
Em vez disso, eles vão reinstalar uma chave de criptografia tudo de zero

0:02:31.580,0:02:34.215
Isso faz com que um julgamento para interceptar e

0:02:34.220,0:02:36.820
manipular todos os dados que são transmitidos por estes dispositivos

0:02:37.760,0:02:42.940
Quando nós agora ir para Wireshark, já podemos ver que uma quantidade significativa de dados foi interceptado

0:02:43.200,0:02:49.020
Note-se que, normalmente, todos esses dados criptografados usando WPA2 e, portanto, não é legível pelo atacante.

0:02:49.240,0:02:52.820
No entanto, sem saber a senha da rede Wi-Fi protegida

0:02:52.820,0:02:55.440
podemos ler todos os pacotes que a vítima está enviando

0:02:55.460,0:02:59.740
Isto demonstra claramente que temos contornar com sucesso WPA2

0:03:00.620,0:03:04.000
Vamos agora visitar um site no dispositivo Android da vítima

0:03:04.065,0:03:06.855
E particular, você vai voltar a visitar o match.com

0:03:10.520,0:03:15.360
Como você pode ver agora, não há mais um bloqueio HTTPS verde na barra de endereço do navegador

0:03:15.420,0:03:20.000
Isso significa que o site não está mais usando HTTPS como uma camada adicional de proteção

0:03:20.460,0:03:24.260
Note-se que você é capaz de ignorar HTTPS usando a ferramenta sslstrip

0:03:24.260,0:03:29.540
embora esta questão de HTTPS ignorando não trabalhando em sites configurados apropriados

0:03:29.545,0:03:32.020
ela não funciona contra uma fração significado

0:03:32.500,0:03:37.120
Infelizmente, muitos usuários não percebem HTTPS não é mais usado

0:03:37.120,0:03:41.180
e, portanto, vai continuar a fazer login usando seu endereço real de e-mail e senha

0:03:45.100,0:03:49.720
O atacante agora é capaz de interceptar o endereço de e-mail e senha da vítima.

0:03:49.720,0:03:52.200
Claro, esta é apenas uma demonstração usando uma conta falsa

0:03:52.200,0:03:54.040
ou seja, o login falha

0:03:54.320,0:03:58.100
No entanto, o atacante é capaz de ver quais senha tentamos usar

0:03:58.100,0:04:01.040
Então vamos para o atacante e procurar a tentativa de login

0:04:07.220,0:04:12.620
Podemos ver que o atacante era de fato capaz de interceptar o nome de usuário e senha que a vítima usado

0:04:13.600,0:04:19.400
Para evitar ser vítima deste ataque contra WPA2, você deve atualizar todos os seus dispositivos Wi-Fi

